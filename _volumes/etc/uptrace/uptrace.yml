##
## Uptrace configuration file.
## See https://uptrace.dev/get/config.html for details.
##
## You can use environment variables anywhere in this file, for example:
##
##   foo: $FOO
##   bar: ${BAR}
##   baz: ${BAZ:default}
##
## To escape `$`, use `$$`, for example:
##
##   foo: $$FOO_BAR
##

##
## ClickHouse database credentials.
##
ch:
  addr: clickhouse:9000
  user: uptrace
  password: uptrace
  database: uptrace

  # Maximum query execution time.
  max_execution_time: 30s

  # TLS configuration. Uncomment to enable.
  # tls:
  #   insecure_skip_verify: true


##
## PostgreSQL db that is used to store metadata such us metric names, dashboards, alerts,
## and so on.
##
pg:
  addr: postgres:5432
  user: uptrace
  password: uptrace
  database: uptrace

  # TLS configuration. Uncomment to enable.
  # tls:
  #   insecure_skip_verify: true # only for self-signed certificates

##
## A list of pre-configured projects. Each project is fully isolated.
##
projects:
  # Conventionally, the first project is used to monitor Uptrace itself.
  - id: 1
    name: Uptrace
    # Token grants write access to the project. Keep a secret.
    token: LwsvUGKesSMsV8ZDU0lUCS9gF1ebG49XvQbvGYAci1Aa
    pinned_attrs:
      - service_name
      - host_name
      - deployment_environment
    # Group spans by deployment.environment attribute.
    group_by_env: false
    # Group funcs spans by service.name attribute.
    group_funcs_by_service: false
    # Enable prom_compat if you want to use the project as a Prometheus datasource in Grafana.
    prom_compat: true

  # Other projects can be used to monitor your applications.
  # To monitor micro-services or multiple related services, use a single project.
  - id: 2
    name: Sandbox
    token: XaweuoAphEdCeihgPXa9DpTUnzUuaNtUWgfyNJ95qxwW
    pinned_attrs:
      - service_name
      - host_name
      - deployment_environment
    # Group spans by deployment.environment attribute.
    group_by_env: false
    # Group funcs spans by service.name attribute.
    group_funcs_by_service: false
    prom_compat: true

##
## To require authentication, uncomment one of the following sections.
##
auth:
#  users:
#    - name: uptrace
#      email: uptrace
#      password: uptrace
#      notify_by_email: true
  oidc:
    - id: keycloak
      display_name: Keycloak
      issuer_url: http://localhost:8080/realms/uptrace
      client_id: uptrace
      client_secret: HpE3yXenn7tgdJyVmXI0krwwnK84HGdJ
      claim: preferred_username
      scopes:
        - profile
      site:
        addr: http://uptrace:14318

##
## Various options to tweak ClickHouse schema.
## For changes to take effect, you need reset the ClickHouse database with `ch reset`.
##
ch_schema:
  # Compression codec, for example, LZ4, ZSTD(3), or Default.
  compression: ZSTD(3)

  # Whether to use ReplicatedMergeTree instead of MergeTree.
  replicated: false

  # Cluster name for Distributed tables and ON CLUSTER clause.
  #cluster: uptrace1

  spans:
    # Delete spans data after 7 days.
    ttl_delete: 7 DAY
    storage_policy: 'default'

  metrics:
    # Delete metrics data after 90 days.
    ttl_delete: 30 DAY
    storage_policy: 'default'

##
## Addresses on which Uptrace receives gRPC and HTTP requests.
##
listen:
  # OTLP/gRPC API.
  grpc:
    addr: ':14317'

  # OTLP/HTTP API and Uptrace API with UI.
  http:
    addr: ':14318'

  # tls:
  #   cert_file: config/tls/uptrace.crt
  #   key_file: config/tls/uptrace.key

##
## Various options for Uptrace UI.
##
site:
  # Overrides public URL for Vue-powered UI in case you put Uptrace behind a proxy.
  #addr: 'https://uptrace.mydomain.com/'

##
## Spans processing options.
##
spans:
  # The size of the Go chan used to buffer incoming spans.
  # If the buffer is full, Uptrace starts to drop spans.
  #buffer_size: 100000

  # The number of spans to insert in a single query.
  #batch_size: 10000

##
## Metrics processing options.
##
metrics:
  # List of attributes to drop for being noisy.
  drop_attrs:
    - telemetry.sdk.language
    - telemetry.sdk.name
    - telemetry.sdk.version

  # The size of the Go chan used to buffer incoming measures.
  # If the buffer is full, Uptrace starts to drop measures.
  #buffer_size: 100000

  # The number of measures to insert in a single query.
  #batch_size: 10000

##
## uptrace-go client configuration.
## Uptrace sends internal telemetry here. Defaults to listen.grpc.addr.
##
uptrace_go:
  dsn: http://LwsvUGKesSMsV8ZDU0lUCS9gF1ebG49XvQbvGYAci1Aa@localhost:14317/1

  # Enabled by default.
  #disabled: true

  # tls:
  #   cert_file: config/tls/uptrace.crt
  #   key_file: config/tls/uptrace.key
  #   insecure_skip_verify: true

##
## SMTP settings to send emails.
## https://uptrace.dev/get/alerting.html
##
smtp_mailer:
  enabled: false
  host: mailpit
  port: 1025
  username: mailpit
  password: mailpit
  from: 'uptrace@localhost'

##
## Logging configuration.
##
logs:
  # Zap minimal logging level.
  # Valid values: DEBUG, INFO, WARN, ERROR, DPANIC, PANIC, FATAL.
  level: INFO

# Secret key that is used to sign JWT tokens etc.
secret_key: 102c1a557c314fc28198acd017960843

# Enable to log HTTP requests and database queries.
debug: false
